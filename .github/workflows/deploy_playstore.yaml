name: ðŸš€ Build & Deploy to Play Store

on:
  push:
    branches:
      - master

jobs:
  setup-android-sdk:
    name: ðŸ›  Setup Android SDK & Env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Decode Keystore
        run: echo "${{ secrets.SIGNING_KEY }}" | base64 --decode > gigzconnect.jks

      - name: Create local.properties
        run: |
          echo "storeFile=./gigzconnect.jks" >> local.properties
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> local.properties
          echo "keyAlias=${{ secrets.ALIAS }}" >> local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> local.properties

      - name: Upload signing files
        uses: actions/upload-artifact@v4
        with:
          name: signing-files
          path: |
            gigzconnect.jks
            local.properties

  build-aab:
    name: ðŸ“¦ Build Release AAB
    needs: setup-android-sdk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download signing files
        uses: actions/download-artifact@v4
        with:
          name: signing-files

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant rights to gradlew
        run: chmod +x ./gradlew

      - name: Build Release AAB
        run: ./gradlew bundleRelease --stacktrace

      - name: Upload AAB and mapping
        uses: actions/upload-artifact@v4
        with:
          name: build-aab
          path: |
            app/build/outputs/bundle/release/app-release.aab
            app/build/outputs/mapping/release/mapping.txt

  deploy:
    name: ðŸš€ Deploy to Play Store
    needs: build-aab
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-aab

      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: com.charlesmuchogo.research
          status: completed
          releaseFiles: app-release.aab
          whatsNewDirectory: release-notes
          track: internal
          inAppUpdatePriority: 5
          mappingFile: mapping.txt

      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
        if: always()

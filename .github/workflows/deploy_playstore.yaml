name: ðŸš€ Build and deploy to playStore

on:
  push:
    branches:
      - master
jobs:
  build:
    name: ðŸš€ Build and deploy to playStore
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:

      # Check out Code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Set Up Android SDK (Optional)
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Grants execute permission
      - name: Grant rights to gradlew
        run: chmod +x ./gradlew

      # Build App Bundle
      - name: Build Release AAB
        id: buildRelease
        run: ./gradlew bundleRelease --stacktrace

      # Sign App Bundle
      - name: Sign AAB
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # Service Account Json
      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      #Uploads the .aab to play console
      - name: Deploy to Play Store
        id: deploy
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: com.charlesmuchogo.research
          status: completed
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          whatsNewDirectory: release-notes
          track: production

      # Slack Notification
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
